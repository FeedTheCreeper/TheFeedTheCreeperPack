# Configuration file

ability {
    # Cost of the atmosphere ability [range: 1 ~ 100, default: 10]
    I:atmosphereCost=10

    # Duration of the atmosphere ability [range: 1 ~ 36000, default: 200]
    I:atmosphereDuration=200

    # Whether or not the atmosphere ability should be available [default: true]
    B:atmosphereEnabled=true

    # Cost of the blink ability [range: 1 ~ 100, default: 10]
    I:blinkCost=10

    # Distance of the blink ability [range: 1 ~ 32, default: 15]
    I:blinkDistance=15

    # Whether or not the blink ability should be available [default: true]
    B:blinkEnabled=true

    # Whether or not the drain ability should be available [default: true]
    B:drainEnabled=true

    # Time a living entity should burn for [range: 1 ~ 60, default: 5]
    I:fireBurnTime=5

    # Cost of the fire ability [range: 1 ~ 100, default: 4]
    I:fireCost=4

    # Whether or not the fire ability should be available [default: true]
    B:fireEnabled=true

    # Cost of the fire ability when casting on living entities [range: 1 ~ 100, default: 8]
    I:fireEntityCost=8

    # Cost of the fire ability when extinguishing [range: 1 ~ 100, default: 6]
    I:fireExtinguishCost=6

    # Cost of the fireball ability [range: 1 ~ 100, default: 15]
    I:fireballCost=15

    # Whether or not the fireball ability should be available [default: true]
    B:fireballEnabled=true

    # Cost of the flashstep ability [range: 1 ~ 100, default: 8]
    I:flashstepCost=8

    # Distance of the flashstep ability [range: 1 ~ 32, default: 11]
    I:flashstepDistance=11

    # Whether or not the flashstep ability should be available [default: true]
    B:flashstepEnabled=true

    # Cost of the force ability [range: 1 ~ 100, default: 6]
    I:forceCost=6

    # Whether or not the force ability should be available [default: true]
    B:forceEnabled=true

    # Cost of the harden ability [range: 1 ~ 100, default: 6]
    I:hardenCost=6

    # Whether or not the harden ability should be available [default: true]
    B:hardenEnabled=true

    # Cost of the harvest ability [range: 1 ~ 100, default: 6]
    I:harvestCost=6

    # Whether or not the harvest ability should be available [default: true]
    B:harvestEnabled=true

    # Cost of the heal ability [range: 1 ~ 100, default: 6]
    I:healCost=6

    # Duration of the heal ability [range: 20 ~ 36000, default: 100]
    I:healDuration=100

    # Whether or not the heal ability should be available [default: true]
    B:healEnabled=true

    # Cost of the invisibility ability [range: 1 ~ 100, default: 10]
    I:invisibilityCost=10

    # Duration of the invisibility ability [range: 20 ~ 36000, default: 200]
    I:invisibilityDuration=200

    # Whether or not the invisibility ability should be available [default: true]
    B:invisibilityEnabled=true

    # Cost of the overdrive ability [range: 1 ~ 100, default: 20]
    I:overdriveCost=20

    # Duration of the overdrive ability [range: 20 ~ 36000, default: 1000]
    I:overdriveDuration=1000

    # Whether or not the overdrive ability should be available [default: true]
    B:overdriveEnabled=true

    # Cost of the projectile ability [range: 1 ~ 100, default: 10]
    I:projectileCost=10

    # Whether or not the projectile ability should be available [default: true]
    B:projectileEnabled=true

    # Cost of the exothermic projectile ability [range: 1 ~ 100, default: 10]
    I:projectileExothermicCost=10

    # Whether or not the exothermic projectile ability should be available [default: true]
    B:projectileExothermicEnabled=true

    # Cost of the reactive ability [range: 1 ~ 100, default: 10]
    I:reactiveCost=10

    # Whether or not the reactive ability should be available [default: true]
    B:reactiveEnabled=true

    # Cost of the shield ability [range: 1 ~ 100, default: 20]
    I:shieldCost=20

    # Duration of the shield ability [range: 20 ~ 36000, default: 200]
    I:shieldDuration=200

    # Whether or not the shield ability should be available [default: true]
    B:shieldEnabled=true
}


"ability cost" {
    I:endothermic=10
    I:exothermic=10
    I:projectile=5
    I:projectileExothermic=7
}


"ability states" {
    B:endothermic=true
    B:exothermic=true
    B:projectile=true
    B:projectileExothermic=true
}


entity {
    # Robot cow ID [range: 1 ~ 100, default: 1]
    I:robotCow=1

    # Robot creeper ID [range: 1 ~ 100, default: 1]
    I:robotCreeper=1

    # Robot enderman ID [range: 1 ~ 100, default: 1]
    I:robotEnderman=1

    # Robot villager ID [range: 1 ~ 100, default: 1]
    I:robotVillager=1

    # Robot zombie ID [range: 1 ~ 100, default: 1]
    I:robotZombie=1
}


general {
    # Whether or not to allow giving knowledge from creative [default: false]
    B:creativeKnowledge=false

    # Whether or not to allow giving all knowledge from creative [default: false]
    B:creativeKnowledgeAll=false

    # Whether or not to check version for recommended [default: true]
    B:versionCheck=false
}


machine {
    # Max power a encourager can store [range: 1000 ~ 100000, default: 3200]
    I:analysisPowerMax=3200

    # Max power an analysis machine can receive per tick [range: 1 ~ 1000, default: 5]
    I:analysisPowerRecieve=5

    # Power usage per tick [range: 1 ~ 1000, default: 2]
    I:analysisPowerUse=2

    # The maximum progress to complete analysis [range: 20 ~ 1000, default: 200]
    I:analysisProgressMax=200

    # Time to wait before resetting [range: 20 ~ 100000, default: 30]
    I:analysisWaitingMax=30

    # Max power a crafter can store [range: 1000 ~ 100000, default: 3200]
    I:craftingPowerMax=3200

    # Max power a crafter can receive per tick [range: 1 ~ 1000, default: 5]
    I:craftingPowerRecieve=5

    # Power usage per tick [range: 1 ~ 1000, default: 2]
    I:craftingPowerUse=2

    # The maximum progress to complete crafting [range: 100 ~ 1000, default: 100]
    I:craftingProgressMax=100

    # Max power a encourager can store [range: 1000 ~ 100000, default: 3200]
    I:encouragerPowerMax=3200

    # Max power an encourager can receive per tick [range: 1 ~ 1000, default: 5]
    I:encouragerPowerRecieve=5

    # Power usage per tick [range: 1 ~ 1000, default: 2]
    I:encouragerPowerUse=2

    # The maximum progress to complete encouraging [range: 100 ~ 1000, default: 100]
    I:encouragerProgressMax=100

    # The maximum amount of chargers a focuser can use [range: 1 ~ 10, default: 4]
    I:focuserMaxChargers=4

    # Max power a focuser can store [range: 1000 ~ 100000, default: 12800]
    I:focuserPowerMax=12800

    # Max power a focuser can receive per tick [range: 1 ~ 1000, default: 10]
    I:focuserPowerRecieve=10

    # Power usage per tick [range: 1 ~ 1000, default: 10]
    I:focuserPowerUse=10

    # The maximum progress to complete focusing [range: 100 ~ 100000, default: 5000]
    I:focuserProgressMax=5000

    # Max power a furnace can store [range: 1000 ~ 100000, default: 3200]
    I:furnacePowerMax=3200

    # Max power a furnace can receive per tick [range: 1 ~ 1000, default: 5]
    I:furnacePowerReceive=5

    # Power usage per tick [range: 1 ~ 1000, default: 7]
    I:furnacePowerUse=7

    # The maximum progress to complete smelting [range: 100 ~ 1000, default: 100]
    I:furnaceProgressMax=100

    # Amount of energy generated [range: 1 ~ 100, default: 2]
    I:generatorLightGeneration=2

    # Amount of ticks before energy is generated [range: 1 ~ 100, default: 40]
    I:generatorLightMaxTicks=40

    # Maximum output for the light generator [range: 1 ~ 100, default: 5]
    I:generatorLightPowerMax=3200

    # Amount of ticks before energy is generated [range: 1 ~ 100, default: 40]
    I:generatorVoidMaxTicks=40

    # Modifier for energy generation, higher the number, the lower the energy [range: 1 ~ 10, default: 5]
    I:generatorVoidModifier=5

    # Internal storage for the void generator [range: 1000 ~ 100000, default: 3200]
    I:generatorVoidPowerMax=3200

    # Maximum output for the void generator [range: 1 ~ 100, default: 5]
    I:generatorVoidPowerOutput=5

    # Max power a replicator can store [range: 1000 ~ 100000, default: 3200]
    I:replicatorPowerMax=3200

    # Max power a replicator can receive per tick [range: 1 ~ 1000, default: 5]
    I:replicatorPowerRecieve=5

    # Power usage per tick [range: 1 ~ 1000, default: 7]
    I:replicatorPowerUse=7

    # The maximum progress to complete replicating [range: 100 ~ 1000, default: 100]
    I:replicatorProgressMax=100

    # The maximum working time for entities [range: 100 ~ 1000, default: 100]
    I:replicatorWaitingEntity=100

    # The maximum working time for player [range: 60 ~ 1000, default: 60]
    I:replicatorWaitingPlayer=60

    # Max power a separator can store [range: 1000 ~ 100000, default: 3200]
    I:separatorPowerMax=3200

    # Max power a separator can receive per tick [range: 1 ~ 1000, default: 5]
    I:separatorPowerRecieve=5

    # Power usage per tick [range: 1 ~ 1000, default: 7]
    I:separatorPowerUse=7

    # The maximum progress to complete separating [range: 100 ~ 1000, default: 100]
    I:separatorProgressMax=100
}


